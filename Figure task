abstract class Figure {
    private val planeType = "2D" + "\n" // общее свойство
    abstract fun getAreaValue(sideLenght: Double, sideLenght_2: Double): Double

    open fun getPlaneType() {
        print(planeType)
    }
}

class Square : Figure() {
    override fun getAreaValue(sideLenght: Double, sideLenght_2: Double): Double{
        var area = sideLenght * 2
        return area
    }

    override fun getPlaneType() {
        print("плоскость квадрата - ")
        super.getPlaneType()
    }
}

class Circle : Figure() {
    override fun getAreaValue(sideLenght: Double, sideLenght_2: Double): Double {
        var area = sideLenght * 3.14 * sideLenght
        return area
    }

    override fun getPlaneType() {
        print("плоскость круга - ")
        super.getPlaneType()
    }
}

class Rectangle : Figure() {
    override fun getAreaValue(sideLenght: Double, sideLenght_2: Double): Double {
        var area = sideLenght * sideLenght_2
        return area
    }
    override fun getPlaneType() {
        print("плоскость прямоугольника - ")
        super.getPlaneType()
    }
}

fun main(args: Array<String>) {
    val x = Square()
    print("Площадь квадрата: " + "${x.getAreaValue(5.0, 0.0)}" + "\n")
    // указываем длину стороны квадрата
    x.getPlaneType()

    val y = Circle()
    print("Площадь круга: " + "${y.getAreaValue(5.0, 0.0)}" + "\n")
    // указываем радиус круга
    y.getPlaneType()

    val z = Rectangle()
    print("Площадь прямоугольника: " + "${z.getAreaValue(5.0, 5.0)}" + "\n")
    // указываем стороны прямоугольника
    z.getPlaneType()



}

